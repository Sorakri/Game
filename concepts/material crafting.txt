Material rarity chart:

common		0
uncommon	1
rare		2
very rare	3
epic		4
legendary	5
unique		6



generic raw material class

properties for each raw material

	int		id									// inside ID of the material, never seen by players
	string	name								// name of the material, ex Silver, Iron, Wolfsbane
	int 	properties[]						// any special properties of material, ex stunning, sharpness, easier enchanting?
	float 	density								// used to find weight when combined with other materials and formed into weapons etc.
	int 	priority							// priority of materials properties when combined in an alloy or etc.
	int 	magical_elements[]					// association with magical elements, eg fire, wind, earth, water, etc.
	int 	material_rarity						// rarity of material, epic, legendary, common, uncommon, unique etc.
	int 	material_reactants_good[]			// array of ID's of other raw materials it combines well with.
	int 	material_reactants_bad[]			// array of ID's of other raw materials it doesn't combine well with.
	int 	processing_temp_min					// minimum temperature needed to process material
	int		processing_temp_opt					// optimum temperature to process material
	int		processing_temp_max					// maximum temperature that can be used to process material
	int		processing_time_var					// amount of variance allowed from optimum processing time 
	int 	processing_technique_good[]			// array of processing technique ID's that are good to use for this material.  eg, smithing, alchemy, etc.
	int 	processing_technique_opt			// the ID of the best processing technique for the material.  if not in good or optimal, material has no effect 
	int 	processing_special_reactans[]		// array of material ID's that have special effects on processing when combined with this material.  eg. drasticaly lowers processing temp.

	function 	processing_temp_time(temp being used)			// returns optimum time to process material based on temperature.  unique to each materialt
	function 	special_reactions(reactant ID, reactant quantity)				// returns effect of special reactants on material
	
	
	example:
	
	
int		id									= 0
string	name								= "Mithril Ore"
int 	properties[]						= [5]	//presuming 5 is magical conductivity
int		priority							= 2		//priority of material properties, higher is better, max is 10, 0 means loses its properties when combined
float 	density								= 4.506	//density of material, in this case, same as titanium
int 	magical_elements[]					= [-1]	//-1 is no elements
int 	material_rarity						= 2		//if it is rare
int 	material_reactants_good[]			= [5,39]//if it reacts well with whatever materials have the ID's of 5 and 39
int 	material_reactants_bad[]			= [-1]	//-1 is no elements
int 	processing_temp_min					= 5000	//lowest possible temp to process without special reactants
int		processing_temp_opt					= 6000	//optimum temp to process, can change with special reactants
int		processing_temp_max					= 12000	//highet possible temp to process without special reactants
int		processing_time_var					= 12	//if optimum time is 60, then variance of 12 means any time between 48 and 72 will work
int 	processing_technique_good[]			= [3]	//if alchemy has id of 3
int 	processing_technique_opt			= [1]	//if smithing has id of 1
int 	processing_special_reactans[]		= [34]	//array of materials that have special effect, is passed to a function to see effects.